upstream myweb {
    server My_web1:8081 weight=10;
    # server My_web2:8082 weight=10;
}

# 保留您原来的HTTP配置
server {
    listen 8081;

    # Handle static content
    location /static/ {
        alias /app/frontend/;
        expires 30d;
        try_files $uri $uri/ =404;
        error_log /var/log/nginx/static_debug.log debug;
        rewrite_log on;
    }

    location / {
        proxy_pass http://myweb;
        #proxy_pass http://myweb2;
        proxy_set_header Host $host;
        proxy_set_header IH portal;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# 新添加的HTTPS配置
server {
    listen 443 ssl;

    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Handle static content for HTTPS
    location /static/ {
        alias /app/frontend/;
        expires 30d;
        try_files $uri $uri/ =404;
        error_log /var/log/nginx/static_debug.log debug;
        rewrite_log on;
    }

    location / {
        proxy_pass http://myweb;
        proxy_set_header Host $host;
        proxy_set_header IH portal;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
