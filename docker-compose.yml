version: '3.8'
services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always

    networks:
      - ih
    ports:
      - 80:8081
      - 443:443
    depends_on:
      - My_web1
#      - My_web2

    volumes:
      - ./portal.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/app/frontend
      - /home/ec2-user/data/cert.pem:/etc/nginx/ssl/cert.pem:ro
      - /home/ec2-user/data/key.pem:/etc/nginx/ssl/key.pem:ro

  My_web1:
    image: "tianyifu/myproject:dev"
    container_name: My_web1
    restart: on-failure:10
    environment:
      -  SVPORT:8081
    depends_on:
      - My_db
    networks:
      - ih
    volumes:
      - ./frontend:/app/frontend
#  My_web2:
#    image: "tianyifu/myproject:dev"
#    container_name: My_web2
#    restart: on-failure:10
#    environment:
#      - SVPORT:8082
#    depends_on:
#      - My_db
#    networks:
#      - ih
#  My_web_green:
#    image: "tianyifu/myproject:dev"
#    container_name: My_web_green
#    restart: on-failure:10
#    environment:
#      - SVPORT:8083
#    depends_on:
#      - My_db
#    networks:
#      - ih

  My_db:
    image: mysql:latest
    container_name: My_db
    restart: on-failure:2
    networks:
      - ih
    environment:
      - MYSQL_ROOT_PASSWORD=Fty5005669
      - MYSQL_DATABASE=talkative
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - ./src/create_database.sql:/docker-entrypoint-initdb.d/create_database.sql

networks:
  ih:
    name: ih
    external: true
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

